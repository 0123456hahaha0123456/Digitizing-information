import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.awt.*;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

public class frameWork extends javax.swing.JFrame {
    String colour[] = {"red","black","green","magenta","yellow"};
    String fileName = "input.txt";

    peopleMap5 mp;
    ArrayList<Rectangle> rect;

    /**
     * Creates new form frame
     */
    DefaultTreeModel model;
    public frameWork() {
        initComponents();
        model =(DefaultTreeModel) jTree1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Data");
        createNodes(treeNode1);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));

        jScrollPane1.setViewportView(jTree1);

        setFieldText();

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextField1)
                                                .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(134, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(29, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>

    private void setFieldText(){
        jTextField1.setText("Age1");
        jTextField2.setText("Name2");
        jTextField3.setText("onTv3");
        jTextField4.setText("Job4");
    }
    private void createNodes(DefaultMutableTreeNode top) {
        DefaultMutableTreeNode  person ;
        person = new DefaultMutableTreeNode("People");
        top.add(person);
        try{
            initTree(person);
        }catch (IOException e){
            System.out.println("No file");
        }
    }
    //create Rectangle to sent to client
    private void initRect(ArrayList<People> arr){
        rect = new ArrayList<Rectangle>(){};
        Rectangle duc ;
        Random rand = new Random();
        for(int i=0;i<arr.size();i++){
           duc = new Rectangle(rand.nextInt(50)+20,rand.nextInt(50)+20,colour[i%5],i*100+rand.nextInt(1000)+1,i*100+rand.nextInt(1000)+1,arr.get(i));
           rect.add(duc);
        }
    }

    // create tree, show key of People
    private void initTree(DefaultMutableTreeNode person) throws IOException{
        //read file input to import people
        csvFormat tmp = new csvFormat();
        ArrayList<People> arr = tmp.readCsvFile(fileName);
        this.mp = new peopleMap5(arr);

        initRect(arr);

        DefaultMutableTreeNode duc;
        for(int i=0;i<rect.size();i++) {
            duc = new DefaultMutableTreeNode(rect.get(i).getPeople());
            person.add(duc);
        }
    }

    // get People from 4 feildtext
    private People getPeople(String _name,String _age,String _job,String _onTv){
        int age = Integer.parseInt(_age);
        Job job = Job.valueOf(_job.toUpperCase());
        boolean onTv = Boolean.valueOf(_onTv);
        People duc = new People(_name,age,job,onTv);
        return duc;
    }
    //add button
    private DefaultMutableTreeNode selectedNode;
    Random rand = new Random();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (selectedNode != null){
            String name = jTextField2.getText();
            String age = jTextField1.getText();
            String job = jTextField4.getText();
            String onTv = jTextField3.getText();
            People duc = getPeople(name,age,job,onTv);
            mp.add(duc);
            rect.add(new Rectangle(rand.nextInt(50)+20,rand.nextInt(50)+20,colour[rand.nextInt(4)+1],rand.nextInt(1000)+1, rand.nextInt(1000)+1,duc));
            selectedNode.insert(new DefaultMutableTreeNode(duc),selectedNode.getIndex(selectedNode.getLastChild()));
            model.reload(selectedNode);
        }
        setFieldText();
    }
    //edit button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (selectedNode != null){
            String name = jTextField2.getText();
            String age = jTextField1.getText();
            String job = jTextField4.getText();
            String onTv = jTextField3.getText();
            People duc = getPeople(name,age,job,onTv);
            mp.add(duc);
            rect.add(new Rectangle(rand.nextInt(50)+20,rand.nextInt(50)+20,colour[rand.nextInt(4)+1],rand.nextInt(1000)+1, rand.nextInt(1000)+1,duc));

            String _duc = selectedNode.toString();
            DefaultMutableTreeNode parent = (DefaultMutableTreeNode) selectedNode.getParent();
            parent.remove(selectedNode);
            mp.remove(_duc);
            for(int i=0;i<rect.size();i++) if (rect.get(i).getPeople().toString().equals(_duc)) { rect.remove(i); break;}
            parent.insert(new DefaultMutableTreeNode(duc),parent.getIndex(parent.getLastChild()));

            model.reload(parent);
        }
        setFieldText();
    }
    //delete button
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (selectedNode != null){
            String duc = selectedNode.toString();
            DefaultMutableTreeNode parent = (DefaultMutableTreeNode) selectedNode.getParent();
            parent.remove(selectedNode);
            mp.remove(duc);
            for(int i=0;i<rect.size();i++) if (rect.get(i).getPeople().toString().equals(duc)) { rect.remove(i); break;}
            model.reload(parent);
        }
        for(int i=0;i<rect.size();i++) System.out.println(rect.get(i).getPeople());
        setFieldText();
    }

    public static void solve() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameWork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new frameWork().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTree jTree1;
    // End of variables declaration                   
}